/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import clases.Hora;
import javax.swing.JOptionPane;

/**
 *
 * @author DanielDeJesus
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    Hora h,h2;
    public Principal() {
        initComponents();
        txtHora.setEditable(true);
        txtHora1.setEditable(true);
        txtMinutos.setEditable(true);
        txtMinutos1.setEditable(true);
        txtSegundos.setEditable(true);
        txtSegundos1.setEditable(true);
        cmdGuardarHora1.setEnabled(true);
        cmdGuardarHora2.setEnabled(true);
        cmdValidarHora1.setEnabled(false);
        cmdValidarHora2.setEnabled(false);
        cmdIgualar.setEnabled(false);
        cmdMayorQue.setEnabled(false);
        cmdMenorQue.setEnabled(false);
        cmdBorrar.setEnabled(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        txtMinutos = new javax.swing.JTextField();
        txtSegundos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtHora1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtMinutos1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSegundos1 = new javax.swing.JTextField();
        cmdValidarHora1 = new javax.swing.JButton();
        cmdValidarHora2 = new javax.swing.JButton();
        cmdIgualar = new javax.swing.JButton();
        cmdMenorQue = new javax.swing.JButton();
        cmdMayorQue = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        cmdGuardarHora2 = new javax.swing.JButton();
        cmdGuardarHora1 = new javax.swing.JButton();
        cmdBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 18)); // NOI18N
        jLabel1.setText("Taller Objetos 7");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        jLabel2.setText("Hora");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel3.setText("Minutos");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        jLabel4.setText("Segundos");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, -1, -1));

        txtHora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHoraKeyTyped(evt);
            }
        });
        jPanel1.add(txtHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 30, -1));

        txtMinutos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMinutosKeyTyped(evt);
            }
        });
        jPanel1.add(txtMinutos, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 40, -1));

        txtSegundos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSegundosKeyTyped(evt);
            }
        });
        jPanel1.add(txtSegundos, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 40, -1));

        jLabel5.setText("Hora");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 30, -1));

        jLabel6.setText("Hora #1");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, -1, -1));

        jLabel7.setText("Hora #2");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, -1, -1));

        txtHora1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHora1KeyTyped(evt);
            }
        });
        jPanel1.add(txtHora1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 40, -1));

        jLabel8.setText("Minutos");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, -1, -1));

        txtMinutos1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMinutos1KeyTyped(evt);
            }
        });
        jPanel1.add(txtMinutos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 40, -1));

        jLabel9.setText("Segundos");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, -1));

        txtSegundos1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSegundos1KeyTyped(evt);
            }
        });
        jPanel1.add(txtSegundos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 50, -1));

        cmdValidarHora1.setText("Validar Hora 1");
        cmdValidarHora1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdValidarHora1ActionPerformed(evt);
            }
        });
        jPanel1.add(cmdValidarHora1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        cmdValidarHora2.setText("Validar Hora 2");
        cmdValidarHora2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdValidarHora2ActionPerformed(evt);
            }
        });
        jPanel1.add(cmdValidarHora2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, -1, -1));

        cmdIgualar.setText("Igualar");
        cmdIgualar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdIgualarActionPerformed(evt);
            }
        });
        jPanel1.add(cmdIgualar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, -1, -1));

        cmdMenorQue.setText("Menor Que");
        cmdMenorQue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMenorQueActionPerformed(evt);
            }
        });
        jPanel1.add(cmdMenorQue, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        cmdMayorQue.setText("Mayor Que");
        cmdMayorQue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdMayorQueActionPerformed(evt);
            }
        });
        jPanel1.add(cmdMayorQue, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, -1, -1));

        txtResultado.setEditable(false);
        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane1.setViewportView(txtResultado);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 210, 80));

        cmdGuardarHora2.setText("Guardar Hora 2");
        cmdGuardarHora2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarHora2ActionPerformed(evt);
            }
        });
        jPanel1.add(cmdGuardarHora2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        cmdGuardarHora1.setText("Guardar Hora 1");
        cmdGuardarHora1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarHora1ActionPerformed(evt);
            }
        });
        jPanel1.add(cmdGuardarHora1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        cmdBorrar.setText("Borrar");
        cmdBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBorrarActionPerformed(evt);
            }
        });
        jPanel1.add(cmdBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(481, 380));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdValidarHora1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdValidarHora1ActionPerformed
        int aux;
        String aux2=null;
        aux=h.validar();
        switch(aux){
            case 0:
                aux2 = "La hora es valida";
                txtHora.setEditable(false);
        txtMinutos.setEditable(false);
        txtSegundos.setEditable(false);
        cmdGuardarHora1.setEnabled(false);
        cmdValidarHora1.setEnabled(false);
        cmdIgualar.setEnabled(true);
        cmdMayorQue.setEnabled(true);
        cmdMenorQue.setEnabled(true);
        cmdBorrar.setEnabled(true);
                
            break;
            case 1:
                aux2 = "La hora es invalida"+"\n"+
                       "Por favor ingrese otra hora";
                txtHora.setText("");
                txtMinutos.setText("");
                txtSegundos.setText("");
                txtHora.requestFocusInWindow();
                txtHora.setEditable(true);
        txtMinutos.setEditable(true);
        txtSegundos.setEditable(true);
        cmdGuardarHora1.setEnabled(true);
        cmdValidarHora1.setEnabled(false);
        cmdIgualar.setEnabled(false);
        cmdMayorQue.setEnabled(false);
        cmdMenorQue.setEnabled(false);
        cmdBorrar.setEnabled(true);
        }
        txtResultado.setText(aux2);
    }//GEN-LAST:event_cmdValidarHora1ActionPerformed

    private void cmdMenorQueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMenorQueActionPerformed
        String aux;
        if(h==null){
            JOptionPane.showMessageDialog(this, "Digite la hora #1", "Error", JOptionPane.ERROR_MESSAGE);
            txtHora.requestFocusInWindow();
            cmdMenorQue.setEnabled(false);
        }
        else if(h2==null){
            JOptionPane.showMessageDialog(this, "Digite la hora #2", "Error", JOptionPane.ERROR_MESSAGE);
            txtHora1.requestFocusInWindow();
            cmdMenorQue.setEnabled(false);
        }
        else{
        aux = h.menorQue(h2);
        txtResultado.setText(aux);
        }
                
    }//GEN-LAST:event_cmdMenorQueActionPerformed

    private void cmdGuardarHora1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarHora1ActionPerformed
        int horas, minutos, segundos;
        if(txtHora.getText().trim().isEmpty() && txtMinutos.getText().trim().isEmpty() && txtSegundos.getText().trim().isEmpty()){
            h = new Hora();
            JOptionPane.showMessageDialog(this, "Hora creada exitosamente");
            txtHora.setEditable(false);
        txtMinutos.setEditable(false);
        txtSegundos.setEditable(false);
        cmdGuardarHora1.setEnabled(false);
        cmdValidarHora1.setEnabled(true);
        cmdIgualar.setEnabled(false);
        cmdMayorQue.setEnabled(false);
        cmdMenorQue.setEnabled(false);
        cmdBorrar.setEnabled(true);
        }
        else{
            try{
            if(txtHora.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Digite la hora", "Error", JOptionPane.ERROR_MESSAGE);
                txtHora.requestFocusInWindow();
            }
            else if(txtMinutos.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Digite los minutos", "Error", JOptionPane.ERROR_MESSAGE);
                txtMinutos.requestFocusInWindow();
            }
            else if(txtSegundos.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Digite los segundos", "Error", JOptionPane.ERROR_MESSAGE);
                txtSegundos.requestFocusInWindow();
            }
            else{
            horas = Integer.parseInt(txtHora.getText());
            minutos = Integer.parseInt(txtMinutos.getText());
            segundos = Integer.parseInt(txtSegundos.getText());
            h = new Hora (horas,minutos,segundos);
            JOptionPane.showMessageDialog(this, "Hora creada exitosamente");
            txtHora.setEditable(false);
        txtMinutos.setEditable(false);
        txtSegundos.setEditable(false);
        cmdGuardarHora1.setEnabled(false);
        cmdValidarHora1.setEnabled(true);
        cmdIgualar.setEnabled(false);
        cmdMayorQue.setEnabled(false);
        cmdMenorQue.setEnabled(false);
        cmdBorrar.setEnabled(true);
            }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Valor no valido");
            }
        }
    }//GEN-LAST:event_cmdGuardarHora1ActionPerformed

    private void cmdGuardarHora2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarHora2ActionPerformed
        int horas1, minutos1, segundos1;
        if(txtHora1.getText().trim().isEmpty() && txtMinutos1.getText().trim().isEmpty() && txtSegundos1.getText().trim().isEmpty()){
            h2 = new Hora();
            JOptionPane.showMessageDialog(this, "Hora #2 creada exitosamente");
            txtHora1.setEditable(false);
        txtMinutos1.setEditable(false);
        txtSegundos1.setEditable(false);
        cmdGuardarHora2.setEnabled(false);
        cmdValidarHora2.setEnabled(true);
        cmdIgualar.setEnabled(false);
        cmdMayorQue.setEnabled(false);
        cmdMenorQue.setEnabled(false);
        cmdBorrar.setEnabled(true);
        }
        else{
            try{
            if(txtHora1.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Digite la hora", "Error", JOptionPane.ERROR_MESSAGE);
                txtHora1.requestFocusInWindow();
            }
            else if(txtMinutos1.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Digite los minutos", "Error", JOptionPane.ERROR_MESSAGE);
                txtMinutos1.requestFocusInWindow();
            }
            else if(txtSegundos1.getText().trim().isEmpty()){
                JOptionPane.showMessageDialog(this, "Digite los segundos", "Error", JOptionPane.ERROR_MESSAGE);
                txtSegundos1.requestFocusInWindow();
            }
            else{
            horas1 = Integer.parseInt(txtHora1.getText());
            minutos1 = Integer.parseInt(txtMinutos1.getText());
            segundos1 = Integer.parseInt(txtSegundos1.getText());
            h2 = new Hora (horas1,minutos1,segundos1);
            JOptionPane.showMessageDialog(this, "Hora #2 creada exitosamente");
            txtHora1.setEditable(false);
        txtMinutos1.setEditable(false);
        txtSegundos1.setEditable(false);
        cmdGuardarHora2.setEnabled(false);
        cmdValidarHora2.setEnabled(true);
        cmdIgualar.setEnabled(false);
        cmdMayorQue.setEnabled(false);
        cmdMenorQue.setEnabled(false);
        cmdBorrar.setEnabled(true);
            }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Valor no valido");
            }
        }
    }//GEN-LAST:event_cmdGuardarHora2ActionPerformed

    private void cmdValidarHora2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdValidarHora2ActionPerformed
        int aux;
        String aux2=null;
        aux=h2.validar();
        switch(aux){
            case 0:
                aux2 = "La hora es valida";
                txtHora1.setEditable(false);
        txtMinutos1.setEditable(false);
        txtSegundos1.setEditable(false);
        cmdGuardarHora2.setEnabled(false);
        cmdValidarHora2.setEnabled(false);
        cmdIgualar.setEnabled(true);
        cmdMayorQue.setEnabled(true);
        cmdMenorQue.setEnabled(true);
        cmdBorrar.setEnabled(true);
            break;
            case 1:
                aux2 = "La hora es invalida"+"\n"+
                       "Por favor ingrese otra hora";
                txtHora1.setText("");
                txtMinutos1.setText("");
                txtSegundos1.setText("");
                txtHora1.requestFocusInWindow();
                txtHora1.setEditable(true);
        txtMinutos1.setEditable(true);
        txtSegundos1.setEditable(true);
        cmdGuardarHora2.setEnabled(true);
        cmdValidarHora2.setEnabled(false);
        cmdIgualar.setEnabled(false);
        cmdMayorQue.setEnabled(false);
        cmdMenorQue.setEnabled(false);
        cmdBorrar.setEnabled(true);
        }
        txtResultado.setText(aux2);
    }//GEN-LAST:event_cmdValidarHora2ActionPerformed

    private void cmdIgualarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdIgualarActionPerformed
        String aux;
        if(h==null){
            JOptionPane.showMessageDialog(this, "Digite la hora #1", "Error", JOptionPane.ERROR_MESSAGE);
            txtHora.requestFocusInWindow();
            cmdIgualar.setEnabled(false);
        }
        else if(h2==null){
            JOptionPane.showMessageDialog(this, "Digite la hora #2", "Error", JOptionPane.ERROR_MESSAGE);
            txtHora1.requestFocusInWindow();
            cmdIgualar.setEnabled(false);
        }
        else{
        aux = h.igualar(h2);
        txtResultado.setText(aux);
        }
    }//GEN-LAST:event_cmdIgualarActionPerformed

    private void cmdMayorQueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdMayorQueActionPerformed
        String aux;
        if(h==null){
            JOptionPane.showMessageDialog(this, "Digite la hora #1", "Error", JOptionPane.ERROR_MESSAGE);
            txtHora.requestFocusInWindow();
            cmdMayorQue.setEnabled(false);
        }
        else if(h2==null){
            JOptionPane.showMessageDialog(this, "Digite la hora #2", "Error", JOptionPane.ERROR_MESSAGE);
            txtHora1.requestFocusInWindow();
            cmdMayorQue.setEnabled(false);
        }
        else{
        aux = h.mayorQue(h2);
        txtResultado.setText(aux);
        }
    }//GEN-LAST:event_cmdMayorQueActionPerformed

    private void txtHoraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHoraKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtHoraKeyTyped

    private void txtMinutosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMinutosKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMinutosKeyTyped

    private void txtSegundosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSegundosKeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtSegundosKeyTyped

    private void txtHora1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHora1KeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtHora1KeyTyped

    private void txtMinutos1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMinutos1KeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtMinutos1KeyTyped

    private void txtSegundos1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSegundos1KeyTyped
        char c=evt.getKeyChar();
        if(!Character.isDigit(c)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtSegundos1KeyTyped

    private void cmdBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBorrarActionPerformed
        txtHora.setText("");
        txtHora1.setText("");
        txtMinutos.setText("");
        txtMinutos1.setText("");
        txtSegundos.setText("");
        txtSegundos1.setText("");
        txtResultado.setText("");
        txtHora.requestFocusInWindow();
        txtHora.setEditable(true);
        txtHora1.setEditable(true);
        txtMinutos.setEditable(true);
        txtMinutos1.setEditable(true);
        txtSegundos.setEditable(true);
        txtSegundos1.setEditable(true);
        cmdGuardarHora1.setEnabled(true);
        cmdGuardarHora2.setEnabled(true);
        cmdValidarHora1.setEnabled(false);
        cmdValidarHora2.setEnabled(false);
        cmdIgualar.setEnabled(false);
        cmdMayorQue.setEnabled(false);
        cmdMenorQue.setEnabled(false);
        cmdBorrar.setEnabled(true);
    }//GEN-LAST:event_cmdBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdBorrar;
    private javax.swing.JButton cmdGuardarHora1;
    private javax.swing.JButton cmdGuardarHora2;
    private javax.swing.JButton cmdIgualar;
    private javax.swing.JButton cmdMayorQue;
    private javax.swing.JButton cmdMenorQue;
    private javax.swing.JButton cmdValidarHora1;
    private javax.swing.JButton cmdValidarHora2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtHora1;
    private javax.swing.JTextField txtMinutos;
    private javax.swing.JTextField txtMinutos1;
    private javax.swing.JTextArea txtResultado;
    private javax.swing.JTextField txtSegundos;
    private javax.swing.JTextField txtSegundos1;
    // End of variables declaration//GEN-END:variables
}
